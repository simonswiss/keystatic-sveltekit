"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unist-util-is";
exports.ids = ["vendor-chunks/unist-util-is"];
exports.modules = {

/***/ "(ssr)/./node_modules/unist-util-is/convert.js":
/*!***********************************************!*\
  !*** ./node_modules/unist-util-is/convert.js ***!
  \***********************************************/
/***/ ((module) => {

eval("\nmodule.exports = convert;\nfunction convert(test) {\n    if (test == null) {\n        return ok;\n    }\n    if (typeof test === \"string\") {\n        return typeFactory(test);\n    }\n    if (typeof test === \"object\") {\n        return \"length\" in test ? anyFactory(test) : allFactory(test);\n    }\n    if (typeof test === \"function\") {\n        return test;\n    }\n    throw new Error(\"Expected function, string, or object as test\");\n}\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n    return all;\n    function all(node) {\n        var key;\n        for(key in test){\n            if (node[key] !== test[key]) return false;\n        }\n        return true;\n    }\n}\nfunction anyFactory(tests) {\n    var checks = [];\n    var index = -1;\n    while(++index < tests.length){\n        checks[index] = convert(tests[index]);\n    }\n    return any;\n    function any() {\n        var index = -1;\n        while(++index < checks.length){\n            if (checks[index].apply(this, arguments)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n// Utility to convert a string into a function which checks a given nodeâ€™s type\n// for said string.\nfunction typeFactory(test) {\n    return type;\n    function type(node) {\n        return Boolean(node && node.type === test);\n    }\n}\n// Utility to return true.\nfunction ok() {\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1pcy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLE9BQU9DLE9BQU8sR0FBR0M7QUFFakIsU0FBU0EsUUFBUUMsSUFBSTtJQUNuQixJQUFJQSxRQUFRLE1BQU07UUFDaEIsT0FBT0M7SUFDVDtJQUVBLElBQUksT0FBT0QsU0FBUyxVQUFVO1FBQzVCLE9BQU9FLFlBQVlGO0lBQ3JCO0lBRUEsSUFBSSxPQUFPQSxTQUFTLFVBQVU7UUFDNUIsT0FBTyxZQUFZQSxPQUFPRyxXQUFXSCxRQUFRSSxXQUFXSjtJQUMxRDtJQUVBLElBQUksT0FBT0EsU0FBUyxZQUFZO1FBQzlCLE9BQU9BO0lBQ1Q7SUFFQSxNQUFNLElBQUlLLE1BQU07QUFDbEI7QUFFQSw0RUFBNEU7QUFDNUUsNkJBQTZCO0FBQzdCLFNBQVNELFdBQVdKLElBQUk7SUFDdEIsT0FBT007SUFFUCxTQUFTQSxJQUFJQyxJQUFJO1FBQ2YsSUFBSUM7UUFFSixJQUFLQSxPQUFPUixLQUFNO1lBQ2hCLElBQUlPLElBQUksQ0FBQ0MsSUFBSSxLQUFLUixJQUFJLENBQUNRLElBQUksRUFBRSxPQUFPO1FBQ3RDO1FBRUEsT0FBTztJQUNUO0FBQ0Y7QUFFQSxTQUFTTCxXQUFXTSxLQUFLO0lBQ3ZCLElBQUlDLFNBQVMsRUFBRTtJQUNmLElBQUlDLFFBQVEsQ0FBQztJQUViLE1BQU8sRUFBRUEsUUFBUUYsTUFBTUcsTUFBTSxDQUFFO1FBQzdCRixNQUFNLENBQUNDLE1BQU0sR0FBR1osUUFBUVUsS0FBSyxDQUFDRSxNQUFNO0lBQ3RDO0lBRUEsT0FBT0U7SUFFUCxTQUFTQTtRQUNQLElBQUlGLFFBQVEsQ0FBQztRQUViLE1BQU8sRUFBRUEsUUFBUUQsT0FBT0UsTUFBTSxDQUFFO1lBQzlCLElBQUlGLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDRyxLQUFLLENBQUMsSUFBSSxFQUFFQyxZQUFZO2dCQUN4QyxPQUFPO1lBQ1Q7UUFDRjtRQUVBLE9BQU87SUFDVDtBQUNGO0FBRUEsK0VBQStFO0FBQy9FLG1CQUFtQjtBQUNuQixTQUFTYixZQUFZRixJQUFJO0lBQ3ZCLE9BQU9nQjtJQUVQLFNBQVNBLEtBQUtULElBQUk7UUFDaEIsT0FBT1UsUUFBUVYsUUFBUUEsS0FBS1MsSUFBSSxLQUFLaEI7SUFDdkM7QUFDRjtBQUVBLDBCQUEwQjtBQUMxQixTQUFTQztJQUNQLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL0BrZXlzdGF0aWMvdGVtcGxhdGVzLW5leHRqcy8uL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLWlzL2NvbnZlcnQuanM/ZDBjMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBjb252ZXJ0XG5cbmZ1bmN0aW9uIGNvbnZlcnQodGVzdCkge1xuICBpZiAodGVzdCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIG9rXG4gIH1cblxuICBpZiAodHlwZW9mIHRlc3QgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHR5cGVGYWN0b3J5KHRlc3QpXG4gIH1cblxuICBpZiAodHlwZW9mIHRlc3QgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuICdsZW5ndGgnIGluIHRlc3QgPyBhbnlGYWN0b3J5KHRlc3QpIDogYWxsRmFjdG9yeSh0ZXN0KVxuICB9XG5cbiAgaWYgKHR5cGVvZiB0ZXN0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHRlc3RcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZnVuY3Rpb24sIHN0cmluZywgb3Igb2JqZWN0IGFzIHRlc3QnKVxufVxuXG4vLyBVdGlsaXR5IGFzc2VydCBlYWNoIHByb3BlcnR5IGluIGB0ZXN0YCBpcyByZXByZXNlbnRlZCBpbiBgbm9kZWAsIGFuZCBlYWNoXG4vLyB2YWx1ZXMgYXJlIHN0cmljdGx5IGVxdWFsLlxuZnVuY3Rpb24gYWxsRmFjdG9yeSh0ZXN0KSB7XG4gIHJldHVybiBhbGxcblxuICBmdW5jdGlvbiBhbGwobm9kZSkge1xuICAgIHZhciBrZXlcblxuICAgIGZvciAoa2V5IGluIHRlc3QpIHtcbiAgICAgIGlmIChub2RlW2tleV0gIT09IHRlc3Rba2V5XSkgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuXG5mdW5jdGlvbiBhbnlGYWN0b3J5KHRlc3RzKSB7XG4gIHZhciBjaGVja3MgPSBbXVxuICB2YXIgaW5kZXggPSAtMVxuXG4gIHdoaWxlICgrK2luZGV4IDwgdGVzdHMubGVuZ3RoKSB7XG4gICAgY2hlY2tzW2luZGV4XSA9IGNvbnZlcnQodGVzdHNbaW5kZXhdKVxuICB9XG5cbiAgcmV0dXJuIGFueVxuXG4gIGZ1bmN0aW9uIGFueSgpIHtcbiAgICB2YXIgaW5kZXggPSAtMVxuXG4gICAgd2hpbGUgKCsraW5kZXggPCBjaGVja3MubGVuZ3RoKSB7XG4gICAgICBpZiAoY2hlY2tzW2luZGV4XS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cblxuLy8gVXRpbGl0eSB0byBjb252ZXJ0IGEgc3RyaW5nIGludG8gYSBmdW5jdGlvbiB3aGljaCBjaGVja3MgYSBnaXZlbiBub2Rl4oCZcyB0eXBlXG4vLyBmb3Igc2FpZCBzdHJpbmcuXG5mdW5jdGlvbiB0eXBlRmFjdG9yeSh0ZXN0KSB7XG4gIHJldHVybiB0eXBlXG5cbiAgZnVuY3Rpb24gdHlwZShub2RlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4obm9kZSAmJiBub2RlLnR5cGUgPT09IHRlc3QpXG4gIH1cbn1cblxuLy8gVXRpbGl0eSB0byByZXR1cm4gdHJ1ZS5cbmZ1bmN0aW9uIG9rKCkge1xuICByZXR1cm4gdHJ1ZVxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb252ZXJ0IiwidGVzdCIsIm9rIiwidHlwZUZhY3RvcnkiLCJhbnlGYWN0b3J5IiwiYWxsRmFjdG9yeSIsIkVycm9yIiwiYWxsIiwibm9kZSIsImtleSIsInRlc3RzIiwiY2hlY2tzIiwiaW5kZXgiLCJsZW5ndGgiLCJhbnkiLCJhcHBseSIsImFyZ3VtZW50cyIsInR5cGUiLCJCb29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/unist-util-is/convert.js\n");

/***/ })

};
;